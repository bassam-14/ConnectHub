/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrontEnd;

import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import lab9.*;
import contentcreation.*;
import java.awt.Dimension;
import java.util.Arrays;
import javax.swing.JScrollPane;

/**
 *
 * @author Zeina
 */
public class ProfileUI extends javax.swing.JFrame {

    ContentDatabase contentdatabase = ContentDatabase.getInstance();
    private static User user;
    Profile profile = new Profile();

    /**
     * Creates new form Profile
     */
    public ProfileUI(User user) {
        initComponents();
        setTitle("Profile");
        setLocationRelativeTo(null);
        String pfpPath = profile.getPfpPath();
        ImageIcon pfp = new ImageIcon(pfpPath);
        Image pfpImage = pfp.getImage().getScaledInstance(profilePhoto.getWidth(), profilePhoto.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon pfpIcon = new ImageIcon(pfpImage);
        profilePhoto.setIcon(pfpIcon);
        String cpPath = profile.getCpPath();
        ImageIcon cp = new ImageIcon(cpPath);
        Image cpImage = cp.getImage().getScaledInstance(coverPhoto.getWidth(), coverPhoto.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(cpImage);
        coverPhoto.setIcon(scaledIcon);
        String bio = profile.getBio();
        bio1.setText(profile.getBio());
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coverPhoto = new javax.swing.JLabel();
        profilePhoto = new javax.swing.JLabel();
        postsScrollPane = new javax.swing.JScrollPane();
        storiesPane = new javax.swing.JScrollPane();
        friendsListPane = new javax.swing.JScrollPane();
        changeCoverPhoto = new javax.swing.JButton();
        changeProfilephoto = new javax.swing.JButton();
        bio1 = new javax.swing.JLabel();
        changeBio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        coverPhoto.setText("jLabel1");

        profilePhoto.setText("jLabel2");

        changeCoverPhoto.setText("Change Cover Photo");
        changeCoverPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeCoverPhotoActionPerformed(evt);
            }
        });

        changeProfilephoto.setText("Change Profile Photo");
        changeProfilephoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeProfilephotoActionPerformed(evt);
            }
        });

        bio1.setText("jLabel1");

        changeBio.setText("Change Bio");
        changeBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(postsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(storiesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(friendsListPane))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(changeCoverPhoto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeProfilephoto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeBio))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(profilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coverPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(bio1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(coverPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeCoverPhoto)
                    .addComponent(changeProfilephoto)
                    .addComponent(changeBio))
                .addGap(8, 8, 8)
                .addComponent(bio1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(storiesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(friendsListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeCoverPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeCoverPhotoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            profile.setCpPath(selectedFile.getAbsolutePath());
            ImageIcon cp = new ImageIcon(profile.getCpPath());
            Image cpImage = cp.getImage().getScaledInstance(coverPhoto.getWidth(), coverPhoto.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(cpImage);
            coverPhoto.setIcon(scaledIcon);
        }
        JOptionPane.showMessageDialog(null, "No file selected. Operation canceled.", "File Selection", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_changeCoverPhotoActionPerformed

    private void changeProfilephotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeProfilephotoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            profile.setPfpPath(selectedFile.getAbsolutePath());
            ImageIcon pfp = new ImageIcon(profile.getPfpPath());
            Image pfpImage = pfp.getImage().getScaledInstance(profilePhoto.getWidth(), profilePhoto.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(pfpImage);
            profilePhoto.setIcon(scaledIcon);
        }
        JOptionPane.showMessageDialog(null, "No file selected. Operation canceled.", "File Selection", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_changeProfilephotoActionPerformed

    private void changeBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBioActionPerformed
        String input = JOptionPane.showInputDialog(null, "Enter new Bio:", "Input Dialog", JOptionPane.PLAIN_MESSAGE);
        profile.setBio(input);
        bio1.setText(profile.getBio());
        // bioTextLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
    }//GEN-LAST:event_changeBioActionPerformed
    private void displayPosts() {
        List<Posts> allPosts = contentdatabase.getPostsByAuthor(user.getUserId());
        JScrollPane scrollPane = postsScrollPane;
        int width = scrollPane.getWidth();  // Get the width of the JScrollPane
        int height = scrollPane.getHeight();
        //JPanel that holds all posts
        JPanel postsPanel = new JPanel();
        postsPanel.setLayout(new BoxLayout(postsPanel, BoxLayout.Y_AXIS));
        for (int i = 0; i < allPosts.size(); i++) {
            Posts post = allPosts.get(i);  // Get the current post
            Content content = post.getContent();
            JPanel postPanel = new JPanel();
            postPanel.setLayout(new BoxLayout(postPanel, BoxLayout.Y_AXIS));
            postPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            File imageFile = new File(content.getImagepath().get(0));
            if (imageFile.exists()) {
                ImageIcon postImageIcon = new ImageIcon(imageFile.getAbsolutePath());
                Image image = postImageIcon.getImage().getScaledInstance(400, 300, Image.SCALE_SMOOTH);
                JLabel postImageLabel = new JLabel(new ImageIcon(image));
                postImageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
                postPanel.add(postImageLabel);
            }
            String postText = content.getText();
            if (postText != null && !postText.isEmpty()) {
                JLabel postTextLabel = new JLabel(postText);
                postTextLabel.setAlignmentX(Component.CENTER_ALIGNMENT);  // Center the text
                postPanel.add(postTextLabel);
            }
            postsPanel.add(postPanel);
            postsPanel.add(Box.createVerticalStrut(20));

        }
        scrollPane.setViewportView(postsPanel);
        scrollPane.setPreferredSize(new Dimension(width, height));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfileUI(user).setVisible(true);
                List<String> imagePaths = Arrays.asList("src/resources/default-avatar.png");
                Content content=new Content("hi",imagePaths);
                String contentId="1";
                Posts post=new Posts(contentId,user.getUserId(),content);
                post.setContent(content);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bio1;
    private javax.swing.JButton changeBio;
    private javax.swing.JButton changeCoverPhoto;
    private javax.swing.JButton changeProfilephoto;
    private javax.swing.JLabel coverPhoto;
    private javax.swing.JScrollPane friendsListPane;
    private javax.swing.JScrollPane postsScrollPane;
    private javax.swing.JLabel profilePhoto;
    private javax.swing.JScrollPane storiesPane;
    // End of variables declaration//GEN-END:variables
}
